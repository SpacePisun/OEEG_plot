name: Multi-Platform Build

on:
  push:
    tags:
      - 'v*'  # Запускается только при создании тега версии (v1.0, v2.1, etc.)

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: OEEG_plot-windows.zip
            cache_path: ~\AppData\Local\pip\Cache
          - os: ubuntu-latest
            artifact_name: OEEG_plot-linux.tar.gz
            cache_path: ~/.cache/pip
          - os: macos-latest
            artifact_name: OEEG_plot-macos.tar.gz
            cache_path: ~/Library/Caches/pip

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ${{ matrix.cache_path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: pyinstaller launcher.spec

    - name: Create archive (Windows)
      if: runner.os == 'Windows'
      run: |
        cd dist
        Compress-Archive -Path launcher -DestinationPath OEEG_plot-windows.zip

    - name: Create archive (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd dist
        tar -czf ${{ matrix.artifact_name }} launcher/

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/${{ matrix.artifact_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}